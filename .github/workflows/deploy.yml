name: CI/CD Pipeline

permissions:
  contents: read  # Default minimal permissions for all jobs

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Node.js with caching
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Install dependencies with ci for faster, reproducible builds
      - name: Install dependencies
        run: npm ci

      # Run linter
      - name: Run linter
        run: npm run lint
        continue-on-error: true

      # Run security audit
      - name: Security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      # Build the project
      - name: Build project
        run: npm run build

      # Upload build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist/
          retention-days: 7

  lighthouse:
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist/
          
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v11
        with:
          uploadArtifacts: true
          temporaryPublicStorage: true
        continue-on-error: true

  deploy-github-pages:
    runs-on: ubuntu-latest
    needs: test-and-build
    permissions:
      contents: write  # Required to push to gh-pages branch
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist/
          
      # Deploy to GitHub pages
      - name: Deploy to GitHub pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist

  deploy-vercel:
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        if: env.VERCEL_TOKEN != ''
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
        continue-on-error: true